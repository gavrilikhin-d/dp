Root: /^/ <stmts: Statement*> /$/ => stmts;

Statement: Rule;

Comment: "//" <text: /[^\n]*/> => Comment(text);
Whitespace: /\s+/ | Comment;

Rule: <name: RuleName> ':' <pattern: Pattern> /;|($)/;
RuleName
	: /[A-Z][a-zA-Z0-9]*/
	| <name: /[a-z_][a-zA-Z_0-9]*/>
	=> throw RuleNameNotCapitalized { at: @name };
Pattern: Alternatives;
Alternatives: Sequence ('|' Sequence)*;
Sequence: <patterns: Repeat+> <action: Action?>;
Repeat
	: <pattern: AtomicPattern> * => Repeat { pattern }
	| <pattern: AtomicPattern> + => Repeat { pattern, at_least: 1 }
	| <pattern: AtomicPattern> ? => Repeat { pattern, at_most: 1 }
	| AtomicPattern;
AtomicPattern
	: '(' <pattern: Pattern> ')' => pattern
	| Named
	| RuleReference
	| Regex
	| Text;
PatternInParentheses: '(' <pattern: Pattern> ')' => pattern;
Named: '<' <name: Identifier> ':' <pattern: Pattern> '>';
Identifier: /[a-z_][a-zA-Z_0-9]*/>;
RuleReference: <name: /[A-Z][a-zA-Z0-9]*/> => RuleReference(name);
Regex: //[^/]+//;
Text: Char | String | /[^\s*+?()|<:>{}=;]+/;
Char: /'.'/;
String: /"([^"\\]|\\.)*"/;

Action: "=>" <value: Throw | Return> => value;
Return: <value: Expression> => Return(value);
Throw: "throw" <error: Expression> => Throw(error);

ObjectConstructor: Object | DistinctObject;
DistinctObject: <ty: Typename> <obj: Object> => obj as ty;
Object: '{' '}' | '{' Initializer (, Initializer)* ,? '}';
Initializer: FieldInitializer | Expand;
FieldInitializer
	: <name: Identifier> ':' <value: Expression>  => value as name
	| <var: Identifier> => Variable(var) as var;
Expand: ... <expr: Expression> => Expand(expr);
ArrayConstructor: '[' ']' | '[' ArrayElement (, ArrayElement)* ,? ']';
ArrayElement: Expand | Expression;
Expression: Cast | Variable | Value;
Typename: /[A-Z][a-zA-Z0-9]*/;
Type: Typename | Variable;
Cast
	: <expr: Value | Variable> as <ty: Type> => Cast { expr, ty }
	| <ty: Typename> '(' <expr: Value | Variable> ')' => Cast { expr, ty };
Value
	: ObjectConstructor
	| ArrayConstructor
	| String
	| Char
	| Integer;
Variable: <name: /[@a-z_][a-zA-Z_0-9]*/>> => Variable(name)
Integer: /[0-9]+/
